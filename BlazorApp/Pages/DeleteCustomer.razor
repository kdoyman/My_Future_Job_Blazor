@page "/deletecustomer/{id}"
@using BlazorApp.Models;
@using BlazorApp.Interface;
@inject NavigationManager NavigationManager
@inject ICustomerService CustomerService

<h2>Confirm Delete</h2>
<p>Are you sure you want to delete this Customer with Id :<b> @id</b></p>
<br />

<div class="col-md-4">
    <table class="table">
        <tr>
            <td>CompanyName</td>
            <td>@customer.CompanyName</td>
        </tr>
        <tr>
            <td>ContactName</td>
            <td>@customer.ContactName</td>
        </tr>
        <tr>
            <td>Address</td>
            <td>@customer.Address</td>
        </tr>
        <tr>
            <td>City</td>
            <td>@customer.City</td>
        </tr>
        <tr>
            <td>Region</td>
            <td>@customer.Region</td>
        </tr>
        <tr>
            <td>PostalCode</td>
            <td>@customer.PostalCode</td>
        </tr>
        <tr>
            <td>Country</td>
            <td>@customer.Country</td>
        </tr>
        <tr>
            <td>Phone</td>
            <td>@customer.Phone</td>
        </tr>
    </table>
    <div class="form-group">

        <BSButton OnClick="Delete" Color="Color.Danger">Delete</BSButton>
        <BSButton OnClick="Cancel" Color="Color.Info">Cancel</BSButton>
    </div>
</div>

@code {

    [Parameter]
    public string id { get; set; }
    Customer customer = new Customer();

    protected override async Task OnInitializedAsync()
    {
        customer = await CustomerService.SingleCustomer(id);
    }

    protected async Task Delete()
    {
        await CustomerService.DeleteCustomer(id);
        NavigationManager.NavigateTo("listcustomers");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("listcustomers");
    }
}     